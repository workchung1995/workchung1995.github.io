<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MC Chung</title>
    <link>https://example.com/</link>
    <description>Recent content on MC Chung</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 30 Sep 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Heads or tails?</title>
      <link>https://example.com/tools/unfaircoin/</link>
      <pubDate>Tue, 30 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://example.com/tools/unfaircoin/</guid>
      <description>&lt;style&gt;&#xD;&#xA;    .game-container {&#xD;&#xA;        text-align: center;&#xD;&#xA;        padding: 20px;&#xD;&#xA;        max-width: 600px;&#xD;&#xA;        margin: 0 auto;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    .coin-container {&#xD;&#xA;        margin: 40px 0;&#xD;&#xA;        perspective: 1000px;&#xD;&#xA;        height: 200px;&#xD;&#xA;        display: flex;&#xD;&#xA;        justify-content: center;&#xD;&#xA;        align-items: center;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    .coin {&#xD;&#xA;        width: 150px;&#xD;&#xA;        height: 150px;&#xD;&#xA;        position: relative;&#xD;&#xA;        transform-style: preserve-3d;&#xD;&#xA;        transition: transform ease-out;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    .coin-face {&#xD;&#xA;        position: absolute;&#xD;&#xA;        width: 100%;&#xD;&#xA;        height: 100%;&#xD;&#xA;        backface-visibility: hidden;&#xD;&#xA;        border-radius: 50%;&#xD;&#xA;        overflow: hidden;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    .coin-face img {&#xD;&#xA;        width: 100%;&#xD;&#xA;        height: 100%;&#xD;&#xA;        object-fit: cover;&#xD;&#xA;        border-radius: 50%;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    .coin-heads {&#xD;&#xA;        transform: rotateY(0deg);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    .coin-tails {&#xD;&#xA;        transform: rotateY(180deg);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    .flip-animation {&#xD;&#xA;        animation: flip ease-out;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    @keyframes flip {&#xD;&#xA;        0% { transform: rotateY(0deg); }&#xD;&#xA;        100% { transform: rotateY(1800deg); }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    .game-button {&#xD;&#xA;        background-color: #4CAF50;&#xD;&#xA;        border: none;&#xD;&#xA;        color: white;&#xD;&#xA;        padding: 15px 32px;&#xD;&#xA;        text-align: center;&#xD;&#xA;        text-decoration: none;&#xD;&#xA;        display: inline-block;&#xD;&#xA;        font-size: 16px;&#xD;&#xA;        margin: 4px 2px;&#xD;&#xA;        cursor: pointer;&#xD;&#xA;        border-radius: 4px;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    .game-button:disabled {&#xD;&#xA;        background-color: #cccccc;&#xD;&#xA;        cursor: not-allowed;&#xD;&#xA;    }&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;div&gt;&#xD;&#xA;    Press start to flip the coin.&#xD;&#xA;    &lt;ul&gt;&#xD;&#xA;        &lt;li&gt; If it lands heads up, you give me 10 dollars.&lt;/li&gt;&#xD;&#xA;        &lt;li&gt; If it lands tails up, I will give you 10 dollars.&lt;/li&gt;&#xD;&#xA;    &lt;/ul&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&lt;div class=&#34;game-container&#34;&gt;&#xD;&#xA;&#xD;&#xA;    &lt;div class=&#34;coin-container&#34;&gt;&#xD;&#xA;        &lt;div id=&#34;coin&#34; class=&#34;coin&#34;&gt;&#xD;&#xA;            &lt;div class=&#34;coin-face coin-heads&#34;&gt;&#xD;&#xA;                &lt;img src=&#34;https://example.com/images/coin-head.png&#34; width=&#34;150&#34; height=&#34;150&#34; alt=&#34;Coin Head&#34;&gt;&#xD;&#xA;            &lt;/div&gt;&#xD;&#xA;            &lt;div class=&#34;coin-face coin-tails&#34;&gt;&#xD;&#xA;                &lt;img src=&#34;https://example.com/images/coin-tail.png&#34; width=&#34;150&#34; height=&#34;150&#34; alt=&#34;Coin Tail&#34;&gt;&#xD;&#xA;            &lt;/div&gt;&#xD;&#xA;        &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &lt;button id=&#34;flipButton&#34; class=&#34;game-button&#34; onclick=&#34;flipCoin()&#34;&gt;Start&lt;/button&gt;&#xD;&#xA;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;    let isFlipping = false;&#xD;&#xA;&#xD;&#xA;    function flipCoin() {&#xD;&#xA;        if (isFlipping) return;&#xD;&#xA;        &#xD;&#xA;        isFlipping = true;&#xD;&#xA;        const flipButton = document.getElementById(&#39;flipButton&#39;);&#xD;&#xA;        const coin = document.getElementById(&#39;coin&#39;);&#xD;&#xA;        &#xD;&#xA;        flipButton.disabled = true;&#xD;&#xA;        flipButton.textContent = &#39;Flipping...&#39;;&#xD;&#xA;        &#xD;&#xA;        // 隨機翻轉時間 3-7 秒&#xD;&#xA;        const flipDuration = Math.random() * 4000 + 3000; // 3000-7000ms&#xD;&#xA;        &#xD;&#xA;        // 決定結果 (90% 正面, 10% 背面)&#xD;&#xA;        const isHeads = Math.random() &lt; 0.9;&#xD;&#xA;        &#xD;&#xA;        // 計算最終角度&#xD;&#xA;        const baseRotations = 5; // 基本翻轉次數&#xD;&#xA;        const extraRotations = Math.floor(Math.random() * 3); // 額外 0-2 次翻轉&#xD;&#xA;        const totalRotations = baseRotations + extraRotations;&#xD;&#xA;        const finalAngle = isHeads ? totalRotations * 360 : totalRotations * 360 + 180;&#xD;&#xA;        &#xD;&#xA;        // 應用動畫&#xD;&#xA;        coin.style.animationDuration = flipDuration + &#39;ms&#39;;&#xD;&#xA;        coin.style.transform = `rotateY(${finalAngle}deg)`;&#xD;&#xA;        coin.classList.add(&#39;flip-animation&#39;);&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;            coin.classList.remove(&#39;flip-animation&#39;);&#xD;&#xA;            &#xD;&#xA;            flipButton.disabled = false;&#xD;&#xA;            flipButton.textContent = &#39;Start&#39;;&#xD;&#xA;            isFlipping = false;&#xD;&#xA;        }, flipDuration);&#xD;&#xA;    }&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Monty Hall Problem</title>
      <link>https://example.com/tools/montyhall/</link>
      <pubDate>Wed, 10 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://example.com/tools/montyhall/</guid>
      <description>&lt;style&gt;&#xD;&#xA;    .grid-wapper {&#xD;&#xA;        display: grid;&#xD;&#xA;        grid-template-columns: 1fr 1fr 1fr;&#xD;&#xA;        background-color: lightgray;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    .grid-wapper1 {&#xD;&#xA;        display: grid;&#xD;&#xA;        grid-template-columns: 1fr;&#xD;&#xA;        text-align: center;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    .center {&#xD;&#xA;        display: flex;&#xD;&#xA;        justify-self: center;&#xD;&#xA;        align-content: center;&#xD;&#xA;    }&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&#xD;&#xA;&lt;div&gt;&#xD;&#xA;    Suppose you&#39;re on a game show, and you&#39;re given the choice of three doors: Behind one door is a car; behind the&#xD;&#xA;    others, goats. You pick a door, say No. 1, and the host, who knows what&#39;s behind the doors, opens another door, say&#xD;&#xA;    No. 3, which has a goat. He then says to you, &#34;Do you want to pick door No. 2?&#34;&#xD;&#xA;    Is it to your advantage to switch your choice?&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;div class=&#34;grid-wapper&#34; style=&#34;margin-top: 20px;&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;grid-wapper1&#34;&gt;&#xD;&#xA;        &lt;div class=&#34;center&#34; style=&#34;margin-top: 20px;&#34;&gt;&lt;img id=&#34;doorImg1&#34; src=&#34;https://example.com/images/door.svg&#34; /&gt;&lt;/div&gt;&#xD;&#xA;        &lt;div style=&#34;margin-bottom: 10px;&#34;&gt;&lt;input type=&#34;radio&#34; id=&#34;door1&#34; value=&#34;door1&#34; name=&#34;chooseDoor&#34; /&gt;&lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;    &lt;div class=&#34;grid-wapper1&#34;&gt;&#xD;&#xA;        &lt;div class=&#34;center&#34; style=&#34;margin-top: 20px;&#34;&gt;&lt;img id=&#34;doorImg2&#34; src=&#34;https://example.com/images/door.svg&#34; /&gt;&lt;/div&gt;&#xD;&#xA;        &lt;div style=&#34;margin-bottom: 10px;&#34;&gt;&lt;input type=&#34;radio&#34; id=&#34;door2&#34; value=&#34;door2&#34; name=&#34;chooseDoor&#34; /&gt;&lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;    &lt;div class=&#34;grid-wapper1&#34;&gt;&#xD;&#xA;        &lt;div class=&#34;center&#34; style=&#34;margin-top: 20px;&#34;&gt;&lt;img id=&#34;doorImg3&#34; src=&#34;https://example.com/images/door.svg&#34; /&gt;&lt;/div&gt;&#xD;&#xA;        &lt;div style=&#34;margin-bottom: 10px;&#34;&gt;&lt;input type=&#34;radio&#34; id=&#34;door3&#34; value=&#34;door3&#34; name=&#34;chooseDoor&#34; /&gt;&lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;div style=&#34;text-align: center; margin-top: 10px;&#34;&gt;&#xD;&#xA;    &lt;button type=&#34;button&#34; id=&#34;checkBtn&#34; onclick=&#34;showOneDoor()&#34;&gt;Check&lt;/button&gt;&#xD;&#xA;    &lt;button type=&#34;button&#34; id=&#34;changeBtn&#34; style=&#34;display: none;&#34; onclick=&#34;showResult(this.id)&#34;&gt;Change&lt;/button&gt;&#xD;&#xA;    &lt;button type=&#34;button&#34; id=&#34;notChangeBtn&#34; style=&#34;display: none; margin-left: 10px;&#34; onclick=&#34;showResult(this.id)&#34;&gt;Not Change&lt;/button&gt;&#xD;&#xA;    &lt;button type=&#34;button&#34; id=&#34;restartBtn&#34; style=&#34;display: none;&#34; onclick=&#34;location.reload()&#34;&gt;Restart&lt;/button&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;    var carDoor, chooseDoor, openGoatDoor, remainDoor;&#xD;&#xA;    function showOneDoor() {&#xD;&#xA;        try {&#xD;&#xA;            chooseDoor = parseInt(document.querySelector(&#39;input[name=&#34;chooseDoor&#34;]:checked&#39;).value[4]);&#xD;&#xA;            carDoor = Math.ceil(Math.random() * 3);&#xD;&#xA;            const doors = [1, 2, 3];&#xD;&#xA;&#xD;&#xA;            // openDoor(carDoor);&#xD;&#xA;            console.log(chooseDoor);&#xD;&#xA;            console.log(`door${carDoor}`);&#xD;&#xA;&#xD;&#xA;            if (`${chooseDoor}` === `door${carDoor}`) {&#xD;&#xA;                doors.splice(carDoor - 1, 1);&#xD;&#xA;                console.log(doors);&#xD;&#xA;&#xD;&#xA;                var openGoatDoorIndex = Math.ceil(Math.random() * 2);&#xD;&#xA;                openGoatDoor = doors[openGoatDoorIndex - 1];&#xD;&#xA;                doors.splice(openGoatDoorIndex - 1, 1);&#xD;&#xA;                remainDoor = doors[0];&#xD;&#xA;                openDoor(openGoatDoor);&#xD;&#xA;            } else {&#xD;&#xA;                openGoatDoor = doors.filter(x =&gt; x != carDoor &amp;&amp; x != chooseDoor)[0];&#xD;&#xA;                remainDoor = doors.filter(x =&gt; x != openGoatDoor &amp;&amp; x != chooseDoor)[0];&#xD;&#xA;                openDoor(openGoatDoor);&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            var checkBtn = document.getElementById(&#34;checkBtn&#34;);&#xD;&#xA;            var changeBtn = document.getElementById(&#34;changeBtn&#34;);&#xD;&#xA;            var notChangeBtn = document.getElementById(&#34;notChangeBtn&#34;);&#xD;&#xA;&#xD;&#xA;            checkBtn.style.display = &#39;none&#39;;&#xD;&#xA;            changeBtn.style.display = &#39;&#39;;&#xD;&#xA;            notChangeBtn.style.display = &#39;&#39;;&#xD;&#xA;        } catch (e) {&#xD;&#xA;            alert(&#34;Please choose a door!&#34;)&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function openDoor(doorNumber) {&#xD;&#xA;        var doorImgElement = document.getElementById(`doorImg${doorNumber}`);&#xD;&#xA;        doorImgElement.src = &#34;/images/goat.svg&#34;;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    async function showResult(btnId) {&#xD;&#xA;        console.log(btnId)&#xD;&#xA;        var doorImgElement = document.getElementById(`doorImg${openGoatDoor}`);&#xD;&#xA;        doorImgElement.style.opacity = 0;&#xD;&#xA;&#xD;&#xA;        if (btnId == &#34;changeBtn&#34;) {&#xD;&#xA;            var doorRadioElement = document.getElementById(`door${remainDoor}`);&#xD;&#xA;            doorRadioElement.checked = true;&#xD;&#xA;&#xD;&#xA;            var temp = remainDoor;&#xD;&#xA;            remainDoor = chooseDoor;&#xD;&#xA;            chooseDoor = temp;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        await new Promise(r =&gt; setTimeout(r, 500));&#xD;&#xA;&#xD;&#xA;        var doorImgElement = document.getElementById(`doorImg${chooseDoor}`);&#xD;&#xA;        if (carDoor == chooseDoor) {&#xD;&#xA;            doorImgElement.src = &#34;/images/car.svg&#34;;&#xD;&#xA;        } else {&#xD;&#xA;            doorImgElement.src = &#34;/images/goat.svg&#34;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var restartBtn = document.getElementById(&#34;restartBtn&#34;);&#xD;&#xA;        var changeBtn = document.getElementById(&#34;changeBtn&#34;);&#xD;&#xA;        var notChangeBtn = document.getElementById(&#34;notChangeBtn&#34;);&#xD;&#xA;&#xD;&#xA;        restartBtn.style.display = &#39;&#39;;&#xD;&#xA;        changeBtn.style.display = &#39;none&#39;;&#xD;&#xA;        notChangeBtn.style.display = &#39;none&#39;;&#xD;&#xA;    }&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Econometrics</title>
      <link>https://example.com/posts/econometrics/</link>
      <pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://example.com/posts/econometrics/</guid>
      <description>&lt;h1 id=&#34;course-resource&#34;&gt;&#xA;  Course Resource&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#course-resource&#34;&gt;&#xA;    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h3 id=&#34;econ2023&#34;&gt;&#xA;  ECON2023&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#econ2023&#34;&gt;&#xA;    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;(Week 5) &lt;a href=&#34;https://drive.google.com/file/d/1B_W0SuF7xZzlYiOOt0B8nUVUiSTze-XF/view?usp=sharing&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Statistics Tables&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;(Week 4) &lt;a href=&#34;https://drive.google.com/file/d/1I3wh1jisgBZonZ0yeao3SBIeYQ7csHhk/view?usp=drive_link&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Additional 2&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;(Week 4) &lt;a href=&#34;https://drive.google.com/file/d/1I3V4ZEj1ZRn4QKyzGr76MYMVqCHc5AJM/view?usp=drive_link&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Additional 1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Arrange Seat</title>
      <link>https://example.com/tools/arrangeseat/</link>
      <pubDate>Sun, 11 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://example.com/tools/arrangeseat/</guid>
      <description>&lt;ul&gt;&#xD;&#xA;    &lt;li&gt;&#xD;&#xA;        Please upload the student list downloaded from NTU Cool directly.&#xD;&#xA;    &lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&lt;br&gt;&#xD;&#xA;&#xD;&#xA;&lt;form id=&#34;info&#34;&gt;&#xD;&#xA;    &lt;div&gt;&#xD;&#xA;        &lt;input type=&#34;file&#34; id=&#34;studentList&#34; accept=&#34;.xlsx, .csv&#34; required /&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;    &lt;div style=&#34;margin-top: 20px;&#34;&gt;&#xD;&#xA;        &lt;select name=&#34;classroom&#34; id=&#34;classroom&#34; required&gt;&#xD;&#xA;            &lt;option value=&#34;&#34; disabled selected=&#34;selected&#34;&gt;Choose your classroom&lt;/option&gt;&#xD;&#xA;        &lt;/select&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;    &lt;div style=&#34;margin-top: 20px;&#34;&gt;&#xD;&#xA;        &lt;select name=&#34;method&#34; id=&#34;method&#34; required&gt;&#xD;&#xA;            &lt;option value=&#34;&#34; disabled selected=&#34;selected&#34;&gt;Choose a method&lt;/option&gt;&#xD;&#xA;            &lt;option value=&#34;method1&#34;&gt;Method1&lt;/option&gt;&#xD;&#xA;            &lt;!-- &lt;option value=&#34;method2&#34;&gt;Method2&lt;/option&gt; --&gt;&#xD;&#xA;        &lt;/select&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;    &lt;div style=&#34;margin-top: 20px;&#34;&gt;&#xD;&#xA;        &lt;button type=&#34;submit&#34;&gt;Submit&lt;/button&gt;&#xD;&#xA;        &lt;button type=&#34;button&#34; id=&#34;printBtn&#34; style=&#34;display: none;&#34; onclick=&#34;printTable()&#34;&gt;Print&lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &lt;div id=&#34;printElement&#34; style=&#34;display: none;&#34;&gt;&#xD;&#xA;        &lt;div class=&#34;seat&#34;&gt;&#xD;&#xA;            &lt;table id=&#34;table1&#34;&gt;&#xD;&#xA;            &lt;/table&gt;&#xD;&#xA;        &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&lt;/form&gt;&#xD;&#xA;&lt;script src=&#34;https://example.com/js/arrangeSeat.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.fonts.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.8.1/jspdf.plugin.autotable.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;    document.getElementById(&#39;info&#39;).addEventListener(&#39;submit&#39;, function (event) {&#xD;&#xA;        event.preventDefault()&#xD;&#xA;        submit()&#xD;&#xA;    });&#xD;&#xA;    addOptions();&#xD;&#xA;    var numberOfStudents = 0;&#xD;&#xA;&#xD;&#xA;    function submit() {&#xD;&#xA;        var studentList = document.getElementById(&#39;studentList&#39;).files[0]&#xD;&#xA;        var reader = new FileReader()&#xD;&#xA;&#xD;&#xA;        reader.onload = function (file) {&#xD;&#xA;            var data = new Uint8Array(file.target.result)&#xD;&#xA;            var workbook = XLSX.read(data, { type: &#39;array&#39; })&#xD;&#xA;            var sheet_name = workbook.SheetNames[0]&#xD;&#xA;            var sheet = workbook.Sheets[sheet_name]&#xD;&#xA;            jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 })&#xD;&#xA;            var studentNames = []&#xD;&#xA;            for (var i = 1; i &lt; jsonData.length; i++) {&#xD;&#xA;                studentNames.push(jsonData[i][4].split(&#34; &#34;)[0])&#xD;&#xA;            }&#xD;&#xA;            dataProcess(studentNames)&#xD;&#xA;        }&#xD;&#xA;        reader.readAsArrayBuffer(studentList);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function dataProcess(studentNames) {&#xD;&#xA;        numberOfStudents = studentNames.length&#xD;&#xA;        var sampleNames = sample(studentNames, studentNames.length)&#xD;&#xA;        var classroom = getClassroom();&#xD;&#xA;&#xD;&#xA;        var result;&#xD;&#xA;        var method = document.getElementById(&#39;method&#39;).value;&#xD;&#xA;        switch (method) {&#xD;&#xA;            case &#39;method1&#39;:&#xD;&#xA;                result = method1(sampleNames, classroom)&#xD;&#xA;                break;&#xD;&#xA;            case &#39;method2&#39;:&#xD;&#xA;                result = method1(sampleNames, classroom)&#xD;&#xA;                break;&#xD;&#xA;            default:&#xD;&#xA;                break;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        console.log(result)&#xD;&#xA;&#xD;&#xA;        createTable(result)&#xD;&#xA;&#xD;&#xA;        var printBtn = document.getElementById(&#39;printBtn&#39;);&#xD;&#xA;        printBtn.style.display = &#39;&#39;;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function createTable(tableData) {&#xD;&#xA;        var table = document.getElementById(&#39;table1&#39;);&#xD;&#xA;        var tableBody = document.createElement(&#39;tbody&#39;);&#xD;&#xA;&#xD;&#xA;        tableData.forEach(function (rowData, rIndex) {&#xD;&#xA;            var row = document.createElement(&#39;tr&#39;);&#xD;&#xA;&#xD;&#xA;            rowData.forEach(function (cellData, cIndex) {&#xD;&#xA;                var cell = document.createElement(&#39;td&#39;);&#xD;&#xA;                if (cellData === &#34;AA&#34;)&#xD;&#xA;                    cell.classList.add(&#39;aisle&#39;);&#xD;&#xA;                if (rIndex == 0 || cIndex == 0)&#xD;&#xA;                    cell.classList.add(&#39;index&#39;);&#xD;&#xA;                cell.appendChild(document.createTextNode(cellData));&#xD;&#xA;                row.appendChild(cell);&#xD;&#xA;            });&#xD;&#xA;&#xD;&#xA;            tableBody.appendChild(row);&#xD;&#xA;        });&#xD;&#xA;&#xD;&#xA;        table.replaceChildren(tableBody);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Autores de Hugo</title>
      <link>https://example.com/autores/autores-de-hugo/</link>
      <pubDate>Thu, 05 Jan 2023 01:15:52 +0100</pubDate>
      <guid>https://example.com/autores/autores-de-hugo/</guid>
      <description></description>
    </item>
    <item>
      <title>temas</title>
      <link>https://example.com/categoria/temas/</link>
      <pubDate>Wed, 04 Jan 2023 23:21:18 +0100</pubDate>
      <guid>https://example.com/categoria/temas/</guid>
      <description></description>
    </item>
    <item>
      <title>sintaxe</title>
      <link>https://example.com/categoria/sintaxe/</link>
      <pubDate>Wed, 04 Jan 2023 23:21:06 +0100</pubDate>
      <guid>https://example.com/categoria/sintaxe/</guid>
      <description></description>
    </item>
    <item>
      <title>Códigos curtos</title>
      <link>https://example.com/tags/shortcodes/_index.pt-br/</link>
      <pubDate>Wed, 04 Jan 2023 11:51:36 +0100</pubDate>
      <guid>https://example.com/tags/shortcodes/_index.pt-br/</guid>
      <description></description>
    </item>
    <item>
      <title>About Me</title>
      <link>https://example.com/about/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://example.com/about/</guid>
      <description>&lt;p&gt;Graduated from Dept. of Economics, National Taiwan University, majoring in Empirical Macroeconomics, hobby is badminton, occasionally making tools for pleasure, nice to meet you!&lt;/p&gt;&#xA;&lt;h1 id=&#34;resume&#34;&gt;&#xA;  Resume&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#resume&#34;&gt;&#xA;    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;work-experience&#34;&gt;&#xA;  Work Experience&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#work-experience&#34;&gt;&#xA;    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Teaching Assistant&lt;br&gt;&#xA;I have worked as a TA for a number of Econometrics and Macroeconomics related courses in the Dept. of Economics at NTU. The job involves teaching TA session, handling assignments, term exams and other course-related matters. For any further information, please feel free to contact me.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contact Me</title>
      <link>https://example.com/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/contact/</guid>
      <description>&lt;p&gt;Mail: &lt;a href=&#34;mailto:workchung1995@gmail.com&#34; &gt;workchung1995@gmail.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
